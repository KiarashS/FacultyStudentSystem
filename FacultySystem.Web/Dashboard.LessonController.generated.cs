// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace ContentManagementSystem.Web.Areas.Dashboard.Controllers
{
    public partial class LessonController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected LessonController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Create()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Create);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Update()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Update);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Delete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ListClass()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListClass);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CreateClass()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateClass);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateClass()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateClass);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteClass()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteClass);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ListPracticeClass()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListPracticeClass);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CreatePracticeClass()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreatePracticeClass);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdatePracticeClass()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdatePracticeClass);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeletePracticeClass()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeletePracticeClass);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ListFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CreateFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ListNews()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListNews);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CreateNews()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateNews);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateNews()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNews);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteNews()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteNews);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ListDate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListDate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CreateDate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateDate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateDate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteDate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteDate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ListScore()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListScore);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CreateScore()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateScore);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateScore()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateScore);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteScore()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteScore);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ListPractice()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListPractice);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CreatePractice()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreatePractice);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdatePractice()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdatePractice);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeletePractice()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeletePractice);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public LessonController Actions { get { return MVC.Dashboard.Lesson; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Dashboard";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Lesson";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Lesson";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string List = "List";
            public readonly string Create = "Create";
            public readonly string Update = "Update";
            public readonly string Delete = "Delete";
            public readonly string ListClass = "ListClass";
            public readonly string CreateClass = "CreateClass";
            public readonly string UpdateClass = "UpdateClass";
            public readonly string DeleteClass = "DeleteClass";
            public readonly string ListPracticeClass = "ListPracticeClass";
            public readonly string CreatePracticeClass = "CreatePracticeClass";
            public readonly string UpdatePracticeClass = "UpdatePracticeClass";
            public readonly string DeletePracticeClass = "DeletePracticeClass";
            public readonly string ListFile = "ListFile";
            public readonly string CreateFile = "CreateFile";
            public readonly string UpdateFile = "UpdateFile";
            public readonly string DeleteFile = "DeleteFile";
            public readonly string ListNews = "ListNews";
            public readonly string CreateNews = "CreateNews";
            public readonly string UpdateNews = "UpdateNews";
            public readonly string DeleteNews = "DeleteNews";
            public readonly string ListDate = "ListDate";
            public readonly string CreateDate = "CreateDate";
            public readonly string UpdateDate = "UpdateDate";
            public readonly string DeleteDate = "DeleteDate";
            public readonly string ListScore = "ListScore";
            public readonly string CreateScore = "CreateScore";
            public readonly string UpdateScore = "UpdateScore";
            public readonly string DeleteScore = "DeleteScore";
            public readonly string ListPractice = "ListPractice";
            public readonly string CreatePractice = "CreatePractice";
            public readonly string UpdatePractice = "UpdatePractice";
            public readonly string DeletePractice = "DeletePractice";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string List = "List";
            public const string Create = "Create";
            public const string Update = "Update";
            public const string Delete = "Delete";
            public const string ListClass = "ListClass";
            public const string CreateClass = "CreateClass";
            public const string UpdateClass = "UpdateClass";
            public const string DeleteClass = "DeleteClass";
            public const string ListPracticeClass = "ListPracticeClass";
            public const string CreatePracticeClass = "CreatePracticeClass";
            public const string UpdatePracticeClass = "UpdatePracticeClass";
            public const string DeletePracticeClass = "DeletePracticeClass";
            public const string ListFile = "ListFile";
            public const string CreateFile = "CreateFile";
            public const string UpdateFile = "UpdateFile";
            public const string DeleteFile = "DeleteFile";
            public const string ListNews = "ListNews";
            public const string CreateNews = "CreateNews";
            public const string UpdateNews = "UpdateNews";
            public const string DeleteNews = "DeleteNews";
            public const string ListDate = "ListDate";
            public const string CreateDate = "CreateDate";
            public const string UpdateDate = "UpdateDate";
            public const string DeleteDate = "DeleteDate";
            public const string ListScore = "ListScore";
            public const string CreateScore = "CreateScore";
            public const string UpdateScore = "UpdateScore";
            public const string DeleteScore = "DeleteScore";
            public const string ListPractice = "ListPractice";
            public const string CreatePractice = "CreatePractice";
            public const string UpdatePractice = "UpdatePractice";
            public const string DeletePractice = "DeletePractice";
        }


        static readonly ActionParamsClass_Create s_params_Create = new ActionParamsClass_Create();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Create CreateParams { get { return s_params_Create; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Create
        {
            public readonly string lesson = "lesson";
        }
        static readonly ActionParamsClass_Update s_params_Update = new ActionParamsClass_Update();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Update UpdateParams { get { return s_params_Update; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Update
        {
            public readonly string lesson = "lesson";
        }
        static readonly ActionParamsClass_Delete s_params_Delete = new ActionParamsClass_Delete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Delete DeleteParams { get { return s_params_Delete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Delete
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_ListClass s_params_ListClass = new ActionParamsClass_ListClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListClass ListClassParams { get { return s_params_ListClass; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListClass
        {
            public readonly string lessonId = "lessonId";
        }
        static readonly ActionParamsClass_CreateClass s_params_CreateClass = new ActionParamsClass_CreateClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateClass CreateClassParams { get { return s_params_CreateClass; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateClass
        {
            public readonly string lessonClass = "lessonClass";
        }
        static readonly ActionParamsClass_UpdateClass s_params_UpdateClass = new ActionParamsClass_UpdateClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateClass UpdateClassParams { get { return s_params_UpdateClass; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateClass
        {
            public readonly string lessonClass = "lessonClass";
        }
        static readonly ActionParamsClass_DeleteClass s_params_DeleteClass = new ActionParamsClass_DeleteClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteClass DeleteClassParams { get { return s_params_DeleteClass; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteClass
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_ListPracticeClass s_params_ListPracticeClass = new ActionParamsClass_ListPracticeClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListPracticeClass ListPracticeClassParams { get { return s_params_ListPracticeClass; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListPracticeClass
        {
            public readonly string lessonId = "lessonId";
        }
        static readonly ActionParamsClass_CreatePracticeClass s_params_CreatePracticeClass = new ActionParamsClass_CreatePracticeClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreatePracticeClass CreatePracticeClassParams { get { return s_params_CreatePracticeClass; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreatePracticeClass
        {
            public readonly string practiceClass = "practiceClass";
        }
        static readonly ActionParamsClass_UpdatePracticeClass s_params_UpdatePracticeClass = new ActionParamsClass_UpdatePracticeClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdatePracticeClass UpdatePracticeClassParams { get { return s_params_UpdatePracticeClass; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdatePracticeClass
        {
            public readonly string practiceClass = "practiceClass";
        }
        static readonly ActionParamsClass_DeletePracticeClass s_params_DeletePracticeClass = new ActionParamsClass_DeletePracticeClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeletePracticeClass DeletePracticeClassParams { get { return s_params_DeletePracticeClass; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeletePracticeClass
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_ListFile s_params_ListFile = new ActionParamsClass_ListFile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListFile ListFileParams { get { return s_params_ListFile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListFile
        {
            public readonly string lessonId = "lessonId";
        }
        static readonly ActionParamsClass_CreateFile s_params_CreateFile = new ActionParamsClass_CreateFile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateFile CreateFileParams { get { return s_params_CreateFile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateFile
        {
            public readonly string lessonFile = "lessonFile";
            public readonly string file = "file";
            public readonly string coverFile = "coverFile";
        }
        static readonly ActionParamsClass_UpdateFile s_params_UpdateFile = new ActionParamsClass_UpdateFile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateFile UpdateFileParams { get { return s_params_UpdateFile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateFile
        {
            public readonly string lessonFile = "lessonFile";
            public readonly string file = "file";
            public readonly string coverFile = "coverFile";
        }
        static readonly ActionParamsClass_DeleteFile s_params_DeleteFile = new ActionParamsClass_DeleteFile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteFile DeleteFileParams { get { return s_params_DeleteFile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteFile
        {
            public readonly string lessonId = "lessonId";
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_ListNews s_params_ListNews = new ActionParamsClass_ListNews();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListNews ListNewsParams { get { return s_params_ListNews; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListNews
        {
            public readonly string lessonId = "lessonId";
        }
        static readonly ActionParamsClass_CreateNews s_params_CreateNews = new ActionParamsClass_CreateNews();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateNews CreateNewsParams { get { return s_params_CreateNews; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateNews
        {
            public readonly string lessonId = "lessonId";
            public readonly string news = "news";
        }
        static readonly ActionParamsClass_UpdateNews s_params_UpdateNews = new ActionParamsClass_UpdateNews();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateNews UpdateNewsParams { get { return s_params_UpdateNews; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateNews
        {
            public readonly string lessonId = "lessonId";
            public readonly string news = "news";
        }
        static readonly ActionParamsClass_DeleteNews s_params_DeleteNews = new ActionParamsClass_DeleteNews();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteNews DeleteNewsParams { get { return s_params_DeleteNews; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteNews
        {
            public readonly string lessonId = "lessonId";
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_ListDate s_params_ListDate = new ActionParamsClass_ListDate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListDate ListDateParams { get { return s_params_ListDate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListDate
        {
            public readonly string lessonId = "lessonId";
        }
        static readonly ActionParamsClass_CreateDate s_params_CreateDate = new ActionParamsClass_CreateDate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateDate CreateDateParams { get { return s_params_CreateDate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateDate
        {
            public readonly string lessonId = "lessonId";
            public readonly string importantDate = "importantDate";
        }
        static readonly ActionParamsClass_UpdateDate s_params_UpdateDate = new ActionParamsClass_UpdateDate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateDate UpdateDateParams { get { return s_params_UpdateDate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateDate
        {
            public readonly string lessonId = "lessonId";
            public readonly string importantDate = "importantDate";
        }
        static readonly ActionParamsClass_DeleteDate s_params_DeleteDate = new ActionParamsClass_DeleteDate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteDate DeleteDateParams { get { return s_params_DeleteDate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteDate
        {
            public readonly string lessonId = "lessonId";
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_ListScore s_params_ListScore = new ActionParamsClass_ListScore();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListScore ListScoreParams { get { return s_params_ListScore; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListScore
        {
            public readonly string lessonId = "lessonId";
        }
        static readonly ActionParamsClass_CreateScore s_params_CreateScore = new ActionParamsClass_CreateScore();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateScore CreateScoreParams { get { return s_params_CreateScore; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateScore
        {
            public readonly string score = "score";
            public readonly string file = "file";
        }
        static readonly ActionParamsClass_UpdateScore s_params_UpdateScore = new ActionParamsClass_UpdateScore();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateScore UpdateScoreParams { get { return s_params_UpdateScore; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateScore
        {
            public readonly string score = "score";
            public readonly string file = "file";
        }
        static readonly ActionParamsClass_DeleteScore s_params_DeleteScore = new ActionParamsClass_DeleteScore();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteScore DeleteScoreParams { get { return s_params_DeleteScore; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteScore
        {
            public readonly string lessonId = "lessonId";
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_ListPractice s_params_ListPractice = new ActionParamsClass_ListPractice();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListPractice ListPracticeParams { get { return s_params_ListPractice; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListPractice
        {
            public readonly string lessonId = "lessonId";
        }
        static readonly ActionParamsClass_CreatePractice s_params_CreatePractice = new ActionParamsClass_CreatePractice();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreatePractice CreatePracticeParams { get { return s_params_CreatePractice; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreatePractice
        {
            public readonly string practice = "practice";
            public readonly string file = "file";
        }
        static readonly ActionParamsClass_UpdatePractice s_params_UpdatePractice = new ActionParamsClass_UpdatePractice();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdatePractice UpdatePracticeParams { get { return s_params_UpdatePractice; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdatePractice
        {
            public readonly string practice = "practice";
            public readonly string file = "file";
        }
        static readonly ActionParamsClass_DeletePractice s_params_DeletePractice = new ActionParamsClass_DeletePractice();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeletePractice DeletePracticeParams { get { return s_params_DeletePractice; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeletePractice
        {
            public readonly string lessonId = "lessonId";
            public readonly string id = "id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_LessonController : ContentManagementSystem.Web.Areas.Dashboard.Controllers.LessonController
    {
        public T4MVC_LessonController() : base(Dummy.Instance) { }

        [NonAction]
        partial void ListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult List()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.List);
            ListOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ContentManagementSystem.Models.ViewModels.LessonViewModel lesson);

        [NonAction]
        public override System.Web.Mvc.ActionResult Create(ContentManagementSystem.Models.ViewModels.LessonViewModel lesson)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Create);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lesson", lesson);
            CreateOverride(callInfo, lesson);
            return callInfo;
        }

        [NonAction]
        partial void UpdateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ContentManagementSystem.Models.ViewModels.LessonViewModel lesson);

        [NonAction]
        public override System.Web.Mvc.ActionResult Update(ContentManagementSystem.Models.ViewModels.LessonViewModel lesson)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Update);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lesson", lesson);
            UpdateOverride(callInfo, lesson);
            return callInfo;
        }

        [NonAction]
        partial void DeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Delete(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void ListClassOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long lessonId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ListClass(long lessonId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListClass);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonId", lessonId);
            ListClassOverride(callInfo, lessonId);
            return callInfo;
        }

        [NonAction]
        partial void CreateClassOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ContentManagementSystem.Models.ViewModels.LessonClassInfoViewModel lessonClass);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateClass(ContentManagementSystem.Models.ViewModels.LessonClassInfoViewModel lessonClass)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateClass);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonClass", lessonClass);
            CreateClassOverride(callInfo, lessonClass);
            return callInfo;
        }

        [NonAction]
        partial void UpdateClassOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ContentManagementSystem.Models.ViewModels.LessonClassInfoViewModel lessonClass);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateClass(ContentManagementSystem.Models.ViewModels.LessonClassInfoViewModel lessonClass)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateClass);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonClass", lessonClass);
            UpdateClassOverride(callInfo, lessonClass);
            return callInfo;
        }

        [NonAction]
        partial void DeleteClassOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteClass(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteClass);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteClassOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void ListPracticeClassOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long lessonId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ListPracticeClass(long lessonId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListPracticeClass);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonId", lessonId);
            ListPracticeClassOverride(callInfo, lessonId);
            return callInfo;
        }

        [NonAction]
        partial void CreatePracticeClassOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ContentManagementSystem.Models.ViewModels.PracticeClassInfoViewModel practiceClass);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreatePracticeClass(ContentManagementSystem.Models.ViewModels.PracticeClassInfoViewModel practiceClass)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreatePracticeClass);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "practiceClass", practiceClass);
            CreatePracticeClassOverride(callInfo, practiceClass);
            return callInfo;
        }

        [NonAction]
        partial void UpdatePracticeClassOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ContentManagementSystem.Models.ViewModels.PracticeClassInfoViewModel practiceClass);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdatePracticeClass(ContentManagementSystem.Models.ViewModels.PracticeClassInfoViewModel practiceClass)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdatePracticeClass);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "practiceClass", practiceClass);
            UpdatePracticeClassOverride(callInfo, practiceClass);
            return callInfo;
        }

        [NonAction]
        partial void DeletePracticeClassOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeletePracticeClass(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeletePracticeClass);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeletePracticeClassOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void ListFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long lessonId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ListFile(long lessonId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonId", lessonId);
            ListFileOverride(callInfo, lessonId);
            return callInfo;
        }

        [NonAction]
        partial void CreateFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ContentManagementSystem.Models.ViewModels.LessonFilesViewModel lessonFile, System.Web.HttpPostedFileBase file, System.Web.HttpPostedFileBase coverFile);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateFile(ContentManagementSystem.Models.ViewModels.LessonFilesViewModel lessonFile, System.Web.HttpPostedFileBase file, System.Web.HttpPostedFileBase coverFile)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonFile", lessonFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "file", file);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "coverFile", coverFile);
            CreateFileOverride(callInfo, lessonFile, file, coverFile);
            return callInfo;
        }

        [NonAction]
        partial void UpdateFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ContentManagementSystem.Models.ViewModels.LessonFilesViewModel lessonFile, System.Web.HttpPostedFileBase file, System.Web.HttpPostedFileBase coverFile);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateFile(ContentManagementSystem.Models.ViewModels.LessonFilesViewModel lessonFile, System.Web.HttpPostedFileBase file, System.Web.HttpPostedFileBase coverFile)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonFile", lessonFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "file", file);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "coverFile", coverFile);
            UpdateFileOverride(callInfo, lessonFile, file, coverFile);
            return callInfo;
        }

        [NonAction]
        partial void DeleteFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long lessonId, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteFile(long lessonId, long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonId", lessonId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteFileOverride(callInfo, lessonId, id);
            return callInfo;
        }

        [NonAction]
        partial void ListNewsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long lessonId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ListNews(long lessonId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListNews);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonId", lessonId);
            ListNewsOverride(callInfo, lessonId);
            return callInfo;
        }

        [NonAction]
        partial void CreateNewsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long lessonId, ContentManagementSystem.Models.ViewModels.LessonNewsViewModel news);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateNews(long lessonId, ContentManagementSystem.Models.ViewModels.LessonNewsViewModel news)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateNews);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonId", lessonId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "news", news);
            CreateNewsOverride(callInfo, lessonId, news);
            return callInfo;
        }

        [NonAction]
        partial void UpdateNewsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long lessonId, ContentManagementSystem.Models.ViewModels.LessonNewsViewModel news);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateNews(long lessonId, ContentManagementSystem.Models.ViewModels.LessonNewsViewModel news)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNews);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonId", lessonId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "news", news);
            UpdateNewsOverride(callInfo, lessonId, news);
            return callInfo;
        }

        [NonAction]
        partial void DeleteNewsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long lessonId, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteNews(long lessonId, long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteNews);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonId", lessonId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteNewsOverride(callInfo, lessonId, id);
            return callInfo;
        }

        [NonAction]
        partial void ListDateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long lessonId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ListDate(long lessonId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonId", lessonId);
            ListDateOverride(callInfo, lessonId);
            return callInfo;
        }

        [NonAction]
        partial void CreateDateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long lessonId, ContentManagementSystem.Models.ViewModels.LessonImportantDateViewModel importantDate);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateDate(long lessonId, ContentManagementSystem.Models.ViewModels.LessonImportantDateViewModel importantDate)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonId", lessonId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "importantDate", importantDate);
            CreateDateOverride(callInfo, lessonId, importantDate);
            return callInfo;
        }

        [NonAction]
        partial void UpdateDateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long lessonId, ContentManagementSystem.Models.ViewModels.LessonImportantDateViewModel importantDate);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateDate(long lessonId, ContentManagementSystem.Models.ViewModels.LessonImportantDateViewModel importantDate)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonId", lessonId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "importantDate", importantDate);
            UpdateDateOverride(callInfo, lessonId, importantDate);
            return callInfo;
        }

        [NonAction]
        partial void DeleteDateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long lessonId, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteDate(long lessonId, long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonId", lessonId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteDateOverride(callInfo, lessonId, id);
            return callInfo;
        }

        [NonAction]
        partial void ListScoreOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long lessonId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ListScore(long lessonId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListScore);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonId", lessonId);
            ListScoreOverride(callInfo, lessonId);
            return callInfo;
        }

        [NonAction]
        partial void CreateScoreOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ContentManagementSystem.Models.ViewModels.LessonScoresViewModel score, System.Web.HttpPostedFileBase file);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateScore(ContentManagementSystem.Models.ViewModels.LessonScoresViewModel score, System.Web.HttpPostedFileBase file)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateScore);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "score", score);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "file", file);
            CreateScoreOverride(callInfo, score, file);
            return callInfo;
        }

        [NonAction]
        partial void UpdateScoreOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ContentManagementSystem.Models.ViewModels.LessonScoresViewModel score, System.Web.HttpPostedFileBase file);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateScore(ContentManagementSystem.Models.ViewModels.LessonScoresViewModel score, System.Web.HttpPostedFileBase file)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateScore);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "score", score);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "file", file);
            UpdateScoreOverride(callInfo, score, file);
            return callInfo;
        }

        [NonAction]
        partial void DeleteScoreOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long lessonId, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteScore(long lessonId, long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteScore);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonId", lessonId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteScoreOverride(callInfo, lessonId, id);
            return callInfo;
        }

        [NonAction]
        partial void ListPracticeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long lessonId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ListPractice(long lessonId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListPractice);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonId", lessonId);
            ListPracticeOverride(callInfo, lessonId);
            return callInfo;
        }

        [NonAction]
        partial void CreatePracticeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ContentManagementSystem.Models.ViewModels.LessonPracticesViewModel practice, System.Web.HttpPostedFileBase file);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreatePractice(ContentManagementSystem.Models.ViewModels.LessonPracticesViewModel practice, System.Web.HttpPostedFileBase file)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreatePractice);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "practice", practice);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "file", file);
            CreatePracticeOverride(callInfo, practice, file);
            return callInfo;
        }

        [NonAction]
        partial void UpdatePracticeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ContentManagementSystem.Models.ViewModels.LessonPracticesViewModel practice, System.Web.HttpPostedFileBase file);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdatePractice(ContentManagementSystem.Models.ViewModels.LessonPracticesViewModel practice, System.Web.HttpPostedFileBase file)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdatePractice);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "practice", practice);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "file", file);
            UpdatePracticeOverride(callInfo, practice, file);
            return callInfo;
        }

        [NonAction]
        partial void DeletePracticeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long lessonId, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeletePractice(long lessonId, long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeletePractice);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lessonId", lessonId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeletePracticeOverride(callInfo, lessonId, id);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
