// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace ContentManagementSystem.Web.Areas.Dashboard.Controllers
{
    public partial class CitationController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected CitationController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult List()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.List);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Update()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Update);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ListCitations()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListCitations);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CreateCitation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateCitation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateCitation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateCitation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteCitation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteCitation);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CitationController Actions { get { return MVC.Dashboard.Citation; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Dashboard";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Citation";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Citation";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string List = "List";
            public readonly string Update = "Update";
            public readonly string ListCitations = "ListCitations";
            public readonly string CreateCitation = "CreateCitation";
            public readonly string UpdateCitation = "UpdateCitation";
            public readonly string DeleteCitation = "DeleteCitation";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string List = "List";
            public const string Update = "Update";
            public const string ListCitations = "ListCitations";
            public const string CreateCitation = "CreateCitation";
            public const string UpdateCitation = "UpdateCitation";
            public const string DeleteCitation = "DeleteCitation";
        }


        static readonly ActionParamsClass_List s_params_List = new ActionParamsClass_List();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_List ListParams { get { return s_params_List; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_List
        {
            public readonly string filterLastname = "filterLastname";
            public readonly string filterPageId = "filterPageId";
            public readonly string filterEmail = "filterEmail";
            public readonly string jtStartIndex = "jtStartIndex";
            public readonly string jtPageSize = "jtPageSize";
        }
        static readonly ActionParamsClass_Update s_params_Update = new ActionParamsClass_Update();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Update UpdateParams { get { return s_params_Update; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Update
        {
            public readonly string hIndex = "hIndex";
        }
        static readonly ActionParamsClass_ListCitations s_params_ListCitations = new ActionParamsClass_ListCitations();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListCitations ListCitationsParams { get { return s_params_ListCitations; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListCitations
        {
            public readonly string userId = "userId";
            public readonly string jtStartIndex = "jtStartIndex";
            public readonly string jtPageSize = "jtPageSize";
        }
        static readonly ActionParamsClass_CreateCitation s_params_CreateCitation = new ActionParamsClass_CreateCitation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateCitation CreateCitationParams { get { return s_params_CreateCitation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateCitation
        {
            public readonly string userId = "userId";
            public readonly string citation = "citation";
            public readonly string year = "year";
            public readonly string document = "document";
            public readonly string source = "source";
        }
        static readonly ActionParamsClass_UpdateCitation s_params_UpdateCitation = new ActionParamsClass_UpdateCitation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateCitation UpdateCitationParams { get { return s_params_UpdateCitation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateCitation
        {
            public readonly string userId = "userId";
            public readonly string id = "id";
            public readonly string citation = "citation";
            public readonly string year = "year";
            public readonly string document = "document";
            public readonly string source = "source";
        }
        static readonly ActionParamsClass_DeleteCitation s_params_DeleteCitation = new ActionParamsClass_DeleteCitation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteCitation DeleteCitationParams { get { return s_params_DeleteCitation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteCitation
        {
            public readonly string userId = "userId";
            public readonly string id = "id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_CitationController : ContentManagementSystem.Web.Areas.Dashboard.Controllers.CitationController
    {
        public T4MVC_CitationController() : base(Dummy.Instance) { }

        [NonAction]
        partial void ListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string filterLastname, string filterPageId, string filterEmail, int jtStartIndex, int jtPageSize);

        [NonAction]
        public override System.Web.Mvc.ActionResult List(string filterLastname, string filterPageId, string filterEmail, int jtStartIndex, int jtPageSize)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.List);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "filterLastname", filterLastname);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "filterPageId", filterPageId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "filterEmail", filterEmail);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "jtStartIndex", jtStartIndex);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "jtPageSize", jtPageSize);
            ListOverride(callInfo, filterLastname, filterPageId, filterEmail, jtStartIndex, jtPageSize);
            return callInfo;
        }

        [NonAction]
        partial void UpdateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ContentManagementSystem.Models.ViewModels.HIndexManagementViewModel hIndex);

        [NonAction]
        public override System.Web.Mvc.ActionResult Update(ContentManagementSystem.Models.ViewModels.HIndexManagementViewModel hIndex)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Update);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "hIndex", hIndex);
            UpdateOverride(callInfo, hIndex);
            return callInfo;
        }

        [NonAction]
        partial void ListCitationsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int userId, int jtStartIndex, int jtPageSize);

        [NonAction]
        public override System.Web.Mvc.ActionResult ListCitations(int userId, int jtStartIndex, int jtPageSize)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListCitations);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "jtStartIndex", jtStartIndex);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "jtPageSize", jtPageSize);
            ListCitationsOverride(callInfo, userId, jtStartIndex, jtPageSize);
            return callInfo;
        }

        [NonAction]
        partial void CreateCitationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int userId, int citation, int year, int? document, ContentManagementSystem.DomainClasses.DocSource source);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateCitation(int userId, int citation, int year, int? document, ContentManagementSystem.DomainClasses.DocSource source)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateCitation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "citation", citation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "year", year);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "document", document);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "source", source);
            CreateCitationOverride(callInfo, userId, citation, year, document, source);
            return callInfo;
        }

        [NonAction]
        partial void UpdateCitationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int userId, long id, int citation, int year, int? document, ContentManagementSystem.DomainClasses.DocSource source);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateCitation(int userId, long id, int citation, int year, int? document, ContentManagementSystem.DomainClasses.DocSource source)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateCitation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "citation", citation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "year", year);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "document", document);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "source", source);
            UpdateCitationOverride(callInfo, userId, id, citation, year, document, source);
            return callInfo;
        }

        [NonAction]
        partial void DeleteCitationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int userId, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteCitation(int userId, long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteCitation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteCitationOverride(callInfo, userId, id);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
